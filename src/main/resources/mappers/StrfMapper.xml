<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.project_quadruaple.strf.StrfMapper">
    <select id="busiMemberDetail" resultMap="busiMemberResultMap">
        SELECT a.strf_id AS strfId, a.category, a.title AS strfTitle,
        n.user_id AS userId, a.lat AS latit, a.lng AS longitude,
        a.address, a.post, a.tell, a.start_at AS startAt,
        a.end_at AS endAt, a.open_check_in AS openCheck,
        a.close_check_out AS closeCheck, a.detail, a.state,
        a.busi_num AS busiNum, f.detail_title AS locationName,
        e.pic_name AS strfPics, l.profile_pic AS hostProfilePic,
        l.name AS hostName, n.inquired_at AS inquiredAt,
        COALESCE(w.wishCnt, 0) AS wishCnt, COALESCE(r.ratingAvg, 0) AS ratingAvg,
        COALESCE(r.reviewCnt, 0) AS reviewCnt, o.day_week AS restDate,
        CASE
        WHEN #{userId} IS NULL THEN 0
        ELSE COALESCE(uw.wishIn, 0)
        END AS wishIn,
        COALESCE(ur.recentCheck, 0) AS recentCheck,
        COALESCE(ur.recentCheckStatus, NULL) AS recentCheckStatus

        FROM stay_tour_restaur_fest a
        LEFT JOIN strf_pic e ON a.strf_id = e.strf_id
        LEFT JOIN location_detail f ON a.location_detail_id = f.location_detail_id
        LEFT JOIN location g ON f.location_id = g.location_id
        LEFT JOIN business_num k ON a.busi_num = k.busi_num
        LEFT JOIN user l ON l.user_id = k.user_id
        LEFT JOIN recent n ON n.strf_id = a.strf_id

        LEFT JOIN (
        SELECT strf_id, COUNT(DISTINCT review_id) AS reviewCnt, AVG(rating) AS ratingAvg
        FROM review
        GROUP BY strf_id
        ) r ON a.strf_id = r.strf_id

        LEFT JOIN (
        SELECT strf_id, COUNT(user_id) AS wishCnt
        FROM wishlist
        GROUP BY strf_id
        ) w ON a.strf_id = w.strf_id

        LEFT JOIN (
        SELECT strf_id, user_id, 1 AS wishIn
        FROM wishlist
        WHERE user_id = #{userId}
        ) uw ON a.strf_id = uw.strf_id

        LEFT JOIN (
        SELECT
        strf_id, user_id,
        CASE WHEN undo_recent = 0 THEN 0 ELSE 1 END AS recentCheck,
        CASE
        WHEN undo_recent = 1 THEN 0
        WHEN undo_recent = 0 THEN 1
        ELSE NULL
        END AS recentCheckStatus
        FROM recent
        WHERE user_id = #{userId}
        ) ur ON a.strf_id = ur.strf_id

        LEFT JOIN rest_date o ON a.strf_id = o.strf_id

        WHERE a.strf_id = #{strfId}
    </select>
    <resultMap id="busiMemberResultMap" type="com.green.project_quadruaple.strf.model.StrfSelRes">
        <id property="strfId" column="strfId" />
        <result property="category" column="category" />
        <result property="strfTitle" column="strfTitle" />
        <result property="latit" column="latit" />
        <result property="longitude" column="longitude" />
        <result property="address" column="address" />
        <result property="post" column="post" />
        <result property="tell" column="tell" />
        <result property="startAt" column="startAt" />
        <result property="endAt" column="endAt" />
        <result property="openCheck" column="openCheck" />
        <result property="closeCheck" column="closeCheck" />
        <result property="detail" column="detail" />
        <result property="busiNum" column="busiNum" />
        <result property="locationName" column="locationName" />
        <result property="ratingAvg" column="ratingAvg" />
        <result property="reviewWriterName" column="reviewWriterName" />
        <result property="hostProfilePic" column="hostProfilePic" />
        <result property="reviewWriterUserPic" column="reviewWriterUserPic" />
        <result property="hostName" column="hostName" />
        <result property="wishCnt" column="wishCnt" />
        <result property="wishIn" column="wishIn" />
        <result property="recentCheck" column="recentCheck" />
        <result property="recentCheckStatus" column="recentCheckStatus" />
        <result property="inquiredAt" column="inquiredAt" />
        <result property="reviewCnt" column="reviewCnt" />
        <result property="state" column="state" />

        <collection property="restDate" ofType="java.lang.Integer">
            <result property="restDate" column="restDate"/>
        </collection>

        <collection property="strfPics" ofType="com.green.project_quadruaple.strf.model.StrfPicSel">
            <id property="strfId" column="strfId" />
            <result property="strfPic" column="strfPic" />
        </collection>
    </resultMap>

    <select id="getMemberDetail" resultMap="memberResultMap">
        SELECT a.strf_id AS strfId, a.category, a.title AS strfTitle,
        n.user_id AS userId, a.lat AS latit, a.lng AS longitude,
        a.address, a.post, a.tell, a.start_at AS startAt,
        a.end_at AS endAt, a.open_check_in AS openCheck,
        a.close_check_out AS closeCheck, a.detail, a.state,
        a.busi_num AS busiNum, f.detail_title AS locationName,
        e.pic_name AS strfPics, l.profile_pic AS hostProfilePic,
        l.name AS hostName, n.inquired_at AS inquiredAt,
        COALESCE(w.wishCnt, 0) AS wishCnt, COALESCE(r.ratingAvg, 0) AS ratingAvg,
        COALESCE(r.reviewCnt, 0) AS reviewCnt, o.day_week AS restDate,
        CASE
        WHEN #{userId} IS NULL THEN 0
        ELSE COALESCE(uw.wishIn, 0)
        END AS wishIn,
        COALESCE(ur.recentCheck, 0) AS recentCheck,
        COALESCE(ur.recentCheckStatus, NULL) AS recentCheckStatus

        FROM stay_tour_restaur_fest a
        LEFT JOIN strf_pic e ON a.strf_id = e.strf_id
        LEFT JOIN location_detail f ON a.location_detail_id = f.location_detail_id
        LEFT JOIN location g ON f.location_id = g.location_id
        LEFT JOIN business_num k ON a.busi_num = k.busi_num
        LEFT JOIN user l ON l.user_id = k.user_id
        LEFT JOIN recent n ON n.strf_id = a.strf_id
        LEFT JOIN (
        SELECT strf_id, COUNT(DISTINCT review_id) AS reviewCnt, AVG(rating) AS ratingAvg
        FROM review
        GROUP BY strf_id
        ) r ON a.strf_id = r.strf_id
        LEFT JOIN (
        SELECT strf_id, COUNT(user_id) AS wishCnt
        FROM wishlist
        GROUP BY strf_id
        ) w ON a.strf_id = w.strf_id
        LEFT JOIN (
        SELECT strf_id, user_id, 1 AS wishIn
        FROM wishlist
        WHERE user_id = #{userId}
        ) uw ON a.strf_id = uw.strf_id
        LEFT JOIN (
        SELECT
        strf_id, user_id,
        CASE WHEN undo_recent = 0 THEN 0 ELSE 1 END AS recentCheck,
        CASE
        WHEN undo_recent = 1 THEN 0
        WHEN undo_recent = 0 THEN 1
        ELSE NULL
        END AS recentCheckStatus
        FROM recent
        WHERE user_id = #{userId}
        ) ur ON a.strf_id = ur.strf_id

        LEFT JOIN rest_date o ON a.strf_id = o.strf_id

        WHERE a.strf_id = #{strfId} AND a.state = 0
    </select>

    <resultMap id="memberResultMap" type="com.green.project_quadruaple.strf.model.StrfSelRes">
        <id property="strfId" column="strfId" />
        <result property="category" column="category" />
        <result property="strfTitle" column="strfTitle" />
        <result property="latit" column="latit" />
        <result property="longitude" column="longitude" />
        <result property="address" column="address" />
        <result property="post" column="post" />
        <result property="tell" column="tell" />
        <result property="startAt" column="startAt" />
        <result property="endAt" column="endAt" />
        <result property="openCheck" column="openCheck" />
        <result property="closeCheck" column="closeCheck" />
        <result property="detail" column="detail" />
        <result property="busiNum" column="busiNum" />
        <result property="locationName" column="locationName" />
        <result property="ratingAvg" column="ratingAvg" />
        <result property="reviewWriterName" column="reviewWriterName" />
        <result property="hostProfilePic" column="hostProfilePic" />
        <result property="reviewWriterUserPic" column="reviewWriterUserPic" />
        <result property="hostName" column="hostName" />
        <result property="wishCnt" column="wishCnt" />
        <result property="wishIn" column="wishIn" />
        <result property="recentCheck" column="recentCheck" />
        <result property="recentCheckStatus" column="recentCheckStatus" />
        <result property="inquiredAt" column="inquiredAt" />
        <result property="reviewCnt" column="reviewCnt" />
        <result property="state" column="state" />

        <collection property="restDate" ofType="java.lang.Integer">
            <result property="restDate" column="restDate"/>
        </collection>

        <collection property="strfPics" ofType="com.green.project_quadruaple.strf.model.StrfPicSel">
            <result property="strfPics" column="strfPics" />
        </collection>
    </resultMap>

    <select id="strfMenu" resultMap="menuResultMap">
        SELECT b.menu_id AS menuId , b.title AS menuTitle , b.price AS menuPrice , b.menu_pic AS menuPic ,
        a.open_check_in AS openCheckIn , a.close_check_out AS closeCheckIn , a.strf_id AS strfId ,
        c.max_capacity AS maxCapacity, c.recom_capacity AS recomCapacity
        FROM stay_tour_restaur_fest a
        LEFT JOIN menu b
        ON a.strf_id = b.strf_id
        LEFT JOIN parlor c
        ON b.menu_id = c.menu_id
        WHERE a.strf_id = #{strfId}
        GROUP BY a.strf_id , b.menu_id , b.title
    </select>
    <select id="strfAmenity" resultMap="amenityResultMap">
        SELECT b.amenity_id AS amenityId, b.title AS amenityTitle
        FROM amenipoint a
        JOIN amenity b
        ON a.amenity_id = b.amenity_id
        WHERE <if test="category != 'Stay'">
            a.strf_id = #{strfId}
            </if>
        GROUP BY a.strf_id , b.amenity_id
    </select>
    <select id="strfParlor" resultMap="parlorResultMap">
        SELECT a.strf_id AS strfId , b.menu_id AS menuId,
        c.max_capacity AS maxCapacity,
        c.recom_capacity AS recomCapacity , c.surcharge , b.title ,
        d.room_id AS roomId , d.room_num AS roomNum
        FROM stay_tour_restaur_fest a
        JOIN menu b ON a.strf_id = b.strf_id
        JOIN parlor c ON b.menu_id = c.menu_id
        LEFT JOIN room d ON b.menu_id = d.menu_id
        WHERE
            <if test="category != null and category == 'STAY'">
               a.strf_id = #{strfId} AND a.category = #{category}
            </if>
        GROUP BY a.strf_id , b.menu_id , d.room_id
    </select>
    <resultMap id="menuResultMap" type="com.green.project_quadruaple.strf.model.StrfMenu">
        <id property="strfId" column="strfId" />
        <result property="openCheckIn" column="openCheckIn" />
        <result property="closeCheckIn" column="closeCheckIn" />
        <result property="maxCapacity" column="maxCapacity" />
        <result property="recomCapacity" column="recomCapacity" />
        <result property="menuId" column="menuId" />
        <result property="menuTitle" column="menuTitle" />
        <result property="menuPrice" column="menuPrice" />
        <result property="menuPic" column="menuPic" />
    </resultMap>
    <resultMap id="amenityResultMap" type="com.green.project_quadruaple.strf.model.StrfAmenity">
        <id property="strfId" column="strfId" />
        <result property="amenityId" column="amenityId" />
        <result property="amenityTitle" column="amenityTitle" />
    </resultMap>
    <resultMap id="parlorResultMap" type="com.green.project_quadruaple.strf.model.StrfParlorDto">
        <id property="menuId" column="menuId" />
        <result property="maxCapacity" column="maxCapacity" />
        <result property="recomCapacity" column="recomCapacity" />
        <result property="surcharge" column="surcharge" />
        <result property="roomId" column="roomId" />
        <collection property="roomNum" javaType="java.util.List" ofType="java.lang.Integer">
            <result property="roomNum" column="roomNum"/>
        </collection>
    </resultMap>

    <select id="reviewCount">
        SELECT COUNT(DISTINCT review_id)
        FROM review
        WHERE strf_id = #{strfId}
    </select>
    <select id="couponList" resultMap="couponResultMap">
        SELECT coupon_id AS couponId , title AS couponName , expired_at AS expiredAt ,
        discount_per AS discountPer , distribute_at AS distributeAt
        FROM coupon
        WHERE strf_id = #{strfId}
    </select>
    <resultMap id="couponResultMap" type="com.green.project_quadruaple.strf.model.StrfCouponGetRes">
        <id column="couponId" property="couponId"/>
        <result column="couponName" property="couponName"/>
        <result column="expiredAt" property="expiredAt"/>
        <result column="discountPer" property="discountPer"/>
        <result column="distributeAt" property="distributeAt"/>
    </resultMap>

    <insert id="strfUpsert">
        INSERT INTO recent (user_id, strf_id, undo_recent, inquired_at)
        VALUES (#{userId}, #{strfId}, 0, NOW())
        ON DUPLICATE KEY UPDATE
        undo_recent = VALUES(undo_recent),
        inquired_at = NOW()
    </insert>

    <insert id="couponReceive">
        INSERT INTO receive_coupon (user_id , coupon_id)
        VALUES(#{userId}, #{couponId})
    </insert>


    <select id="stayBookingExists" resultMap="bookingResultMap">
        SELECT m.menu_id AS menuId,
        NOT EXISTS (
        SELECT 1 FROM booking
        WHERE booking.menu_id = m.menu_id
        AND (booking.check_in BETWEEN #{checkIn} AND #{checkOut}
        OR booking.check_out BETWEEN #{checkIn} AND #{checkOut})
        ) AS isAvailable
        FROM menu m
        WHERE m.strf_id = #{strfId}
    </select>
    <resultMap id="bookingResultMap" type="com.green.project_quadruaple.strf.model.StrfCheckRes">
        <id column="menuId" property="menuId"/>
        <result column="isAvailable" property="check"/>
    </resultMap>
    <select id="getRestDaysByStrfId" resultType="int">
        SELECT day_week
        FROM rest_date
        WHERE strf_id = #{strfId}
    </select>

<!--    <select id="stayBookingExists" resultMap="bookingResultMap">-->
<!--        SELECT COUNT(*) > 0-->
<!--        FROM booking-->
<!--        WHERE menu_id IN (SELECT menu_id FROM menu WHERE strf_id = #{strfId})-->
<!--        AND (check_in BETWEEN #{checkIn} AND #{checkOut}-->
<!--        OR check_out BETWEEN #{checkIn} AND #{checkOut})-->
<!--    </select>-->
</mapper>





<!--
<select id="getMemberDetail" resultMap="memberResultMap">
        SELECT
        a.strf_id AS strfId , a.category , a.title AS strfTitle , n.user_id AS userId ,
        a.lat AS latit, a.lng AS longitude, a.address, b.menu_id AS menuId,
        a.post, a.tell, a.start_at AS startAt, a.end_at AS endAt,
        a.open_check_in as openCheck, a.close_check_out as closeCheck , o.day_week AS restDate,
        a.detail, a.busi_num AS busiNum, b.menu_pic AS menuPic,
        f.detail_title AS locationName, e.pic_name AS strfPic , d.amenity_id AS amenityId,
        b.title AS menuTitle, d.title AS amenityTitle,
        j.name AS reviewWriterName , j.profile_pic AS reviewWriterUserPic ,
        l.profile_pic AS hostProfilePic, l.name AS hostName , b.price AS menuPrice,
        n.inquired_at AS inquiredAt,
        COUNT(DISTINCT m.user_id) AS wishCnt,
        COUNT(DISTINCT h.review_id) AS reviewCnt , AVG(h.rating) AS ratingAvg
        , a.state , p.max_capacity AS maxCapacity , p.recom_capacity AS recomCapacity , p.surcharge
        , q.room_num AS roomNum , q.room_id AS roomId , a.cid

        <if test="userId != null">
            , IF(EXISTS(SELECT 1 FROM wishlist WHERE user_id = #{userId} AND strf_id = a.strf_id), 1, 0) AS wishIn
        </if>
        <if test="userId == null">
            , 0 AS wishIn
        </if>
        <if test="userId != null">
        , IF( EXISTS( SELECT 1 FROM wishlist WHERE strf_id = a.strf_id AND (#{userId} IS NULL OR user_id = #{userId}) ), 1, 0 ) AS wishIn,
        IF( EXISTS( SELECT 1 FROM recent WHERE j.user_id = #{userId} AND a.strf_id = #{strfId} AND n.undo_recent = 0 ), 0, 1 ) AS recentCheck,
        CASE WHEN EXISTS( SELECT 1 FROM recent WHERE j.user_id = #{userId} AND a.strf_id = #{strfId} AND n.undo_recent = 1 ) THEN 0
        WHEN EXISTS( SELECT 1 FROM recent WHERE j.user_id = #{userId} AND a.strf_id = #{strfId} ) THEN 1 ELSE NULL END AS recentCheckStatus
        </if>

        FROM stay_tour_restaur_fest a
        LEFT JOIN menu b ON a.strf_id = b.strf_id
        LEFT JOIN amenipoint c ON a.strf_id = c.strf_id
        LEFT JOIN amenity d ON c.amenity_id = d.amenity_id
        LEFT JOIN strf_pic e ON a.strf_id = e.strf_id
        LEFT JOIN location_detail f ON a.location_detail_id = f.location_detail_id
        LEFT JOIN location g ON f.location_id = g.location_id
        LEFT JOIN review h ON a.strf_id = h.strf_id
        LEFT JOIN review_pic i ON h.review_id = i.review_id
        LEFT JOIN user j ON h.user_id = j.user_id
        LEFT JOIN business_num k ON a.busi_num = k.busi_num
        LEFT JOIN user l ON l.user_id = k.user_id
        LEFT JOIN wishlist m ON m.strf_id = a.strf_id
        LEFT JOIN recent n ON n.strf_id = a.strf_id
        LEFT JOIN rest_date o ON o.strf_id = a.strf_id
        LEFT JOIN parlor p ON b.menu_id = p.menu_id
        LEFT JOIN room q ON b.menu_id = q.menu_id

        WHERE a.strf_id = #{strfId}
        GROUP BY a.strf_id,b.menu_id,d.amenity_id,b.title,e.pic_name
    </select>
    <resultMap id="memberResultMap" type="com.green.project_quadruaple.strf.model.StrfSelRes">
        <id property="strfId" column="strfId" />
        <result property="category" column="category" />
        <result property="strfTitle" column="strfTitle" />
        <result property="latit" column="latit" />
        <result property="longitude" column="longitude" />
        <result property="address" column="address" />
        <result property="post" column="post" />
        <result property="tell" column="tell" />
        <result property="startAt" column="startAt" />
        <result property="endAt" column="endAt" />
        <result property="openCheck" column="openCheck" />
        <result property="closeCheck" column="closeCheck" />
        <result property="restDate" column="restDate" />
        <result property="detail" column="detail" />
        <result property="busiNum" column="busiNum" />
        <result property="locationName" column="locationName" />
        <result property="ratingAvg" column="ratingAvg" />
        <result property="reviewWriterName" column="reviewWriterName" />
        <result property="hostProfilePic" column="hostProfilePic" />
        <result property="reviewWriterUserPic" column="reviewWriterUserPic" />
        <result property="hostName" column="hostName" />
        <result property="wishCnt" column="wishCnt" />
        <result property="wishIn" column="wishIn" />
        <result property="recentCheck" column="recentCheck" />
        <result property="recentCheckStatus" column="recentCheckStatus" />
        <result property="inquiredAt" column="inquiredAt" />
        <result property="reviewCnt" column="reviewCnt" />
        <result property="state" column="state" />
        <result property="cid" column="cid" />

        <collection property="amenities" ofType="com.green.project_quadruaple.strf.model.StrfAmenity">
            <id property="amenityId" column="amenityId" />
            <result property="amenityTitle" column="amenityTitle" />
        </collection>

        <collection property="menu" ofType="com.green.project_quadruaple.strf.model.StrfMenu">
            <id property="menuId" column="menuId" />
            <result property="strfId" column="strfId" />
            <result property="menuTitle" column="menuTitle" />
            <result property="menuPrice" column="menuPrice" />
            <result property="menuPic" column="menuPic" />
        </collection>

        <collection property="strfPics" ofType="com.green.project_quadruaple.strf.model.StrfPicSel">
            <id property="strfId" column="strfId" />
            <result property="pic" column="strfPic" />
        </collection>

        <collection property="parlors" ofType="com.green.project_quadruaple.strf.model.StrfParlor">
            <id property="menuId" column="menuId" />
            <result property="maxCapacity" column="maxCapacity" />
            <result property="recomCapacity" column="recomCapacity" />
            <result property="surcharge" column="surcharge" />
        </collection>

        <collection property="rooms" ofType="com.green.project_quadruaple.strf.model.StrfRooms">
            <id property="roomId" column="roomId" />
            <result property="roomNum" column="roomNum" />
        </collection>
    </resultMap>
-->